version: 2
jobs:
  build:
    working_directory: ~/zoomhub/zoomhub
    parallelism: 1
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: fpco/stack-build
    steps:
    - checkout

    - run:
        name: Initialize artifact storage
        command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

    # Dependencies
    #   This would typically go in either a build or a build-and-test job when
    #   using workflows
    # Restore the dependency cache
    - restore_cache:
        keys:
        - zh-stack-cache-v1-dep-{{ .Branch }}-{{ checksum "zoomhub.cabal" }}
        # This branch if available
        - zh-stack-cache-v1-dep-{{ .Branch }}-
        # Default branch if not
        - zh-stack-cache-v1-dep-master-
        # Any branch if there are none on the default branch -
        # this should be unnecessary if you have your default branch
        # configured correctly
        - zh-stack-cache-v1-dep-
    - run:
        name: Build binary
        command: stack build --ghc-options="-Wall -Werror -O3"
    - run:
        name: Create Keter package
        command: ./ops/keter-bundle.sh
    - run:
        name: Copy Keter package
        command: cp zoomhub.keter $CIRCLE_ARTIFACTS

    # Save dependency cache
    - save_cache:
        key: zh-stack-cache-v1-dep-{{ .Branch }}-{{ checksum "zoomhub.cabal" }}
        paths:
        - ~/.stack
        - .stack-work
    # Test
    #   This would typically be a build job when using workflows, possibly
    #   combined with build
    # This is based on your 1.0 configuration file or project settings
    - run: stack test
    # Deployment
    # Your existing circle.yml file contains deployment steps.
    # The config translation tool does not support translating deployment steps
    # since deployment in CircleCI 2.0 are better handled through workflows.
    # See the documentation for more information
    #   https://circleci.com/docs/2.0/workflows/
    # Teardown
    #   If you break your build into multiple jobs with workflows, you will
    #   probably want to do the parts of this that are relevant in each
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
